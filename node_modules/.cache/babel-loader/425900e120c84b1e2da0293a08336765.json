{"ast":null,"code":"var _jsxFileName = \"/Users/andrew/Documents/litDecks/src/Learn.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport MultipleChoice from \"./MultipleChoice\"; // import Written from \"./Written\";\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet progress = 50;\nexport default function Learn(terms) {\n  _s();\n\n  const termsArray = terms.terms;\n  const [wordCounter, setCounter] = useState(0);\n  let questionElement = null;\n\n  const setStateOfLearn = count => {\n    setCounter(count);\n  };\n\n  const getStateOfLearn = () => {\n    return wordCounter;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-5 mx-auto my-auto w-3/4 h-3/4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-12 w-full bg-gray-200 rounded-full h-2.5 dark:bg-gray-700\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-blue-600 h-2.5 w-45 rounded-full\",\n        style: {\n          width: progress + \"%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-white\",\n      children: [\"wordCount = \", wordCounter]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Written, {\n      terms: termsArray,\n      setStateOfLearn: setStateOfLearn,\n      getStateOfLearn: getStateOfLearn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Learn, \"QcHsxLM9fYpPBkN5jLJF6F9OA4E=\");\n\n_c = Learn;\n\nfunction Written(terms, setStateOfLearn, getStateOfLearn) {\n  _s2();\n\n  const termsArray = terms.terms;\n  const [message, setMessage] = useState(\"\");\n  let answerIndex = Math.floor(Math.random() * termsArray.length);\n\n  const handleChange = event => {\n    setMessage(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-5 block p-6 max-w-sm bg-white rounded-lg border border-gray-200 shadow-md  dark:bg-gray-800 dark:border-gray-700 h-52\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\",\n      children: termsArray[answerIndex][1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: handleChange,\n      onKeyPress: e => {\n        if (e.key === \"Enter\") {\n          setStateOfLearn(Math.random());\n        }\n      },\n      value: message,\n      type: \"text\",\n      id: \"writtenInput\",\n      className: \"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\",\n      placeholder: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 3\n  }, this);\n}\n\n_s2(Written, \"EiOGSxO4GWQlH0sM782nQ9JwuAs=\");\n\n_c2 = Written;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Learn\");\n$RefreshReg$(_c2, \"Written\");","map":{"version":3,"names":["MultipleChoice","useState","progress","Learn","terms","termsArray","wordCounter","setCounter","questionElement","setStateOfLearn","count","getStateOfLearn","width","Written","message","setMessage","answerIndex","Math","floor","random","length","handleChange","event","target","value","e","key"],"sources":["/Users/andrew/Documents/litDecks/src/Learn.js"],"sourcesContent":["import MultipleChoice from \"./MultipleChoice\";\n// import Written from \"./Written\";\nimport {useState} from \"react\";\n\nlet progress = 50;\n\nexport default function Learn(terms) {\n\tconst termsArray = terms.terms;\n\tconst [wordCounter, setCounter] = useState(0);\n\tlet questionElement = null;\n\n\tconst setStateOfLearn = (count) => {\n\t\tsetCounter(count);\n\t};\n\tconst getStateOfLearn = () => {\n\t\treturn wordCounter;\n\t};\n\n\treturn (\n\t\t<div className=\"space-y-5 mx-auto my-auto w-3/4 h-3/4\">\n\t\t\t<div className=\"mt-12 w-full bg-gray-200 rounded-full h-2.5 dark:bg-gray-700\">\n\t\t\t\t<div className=\"bg-blue-600 h-2.5 w-45 rounded-full\" style={{width: progress + \"%\"}}></div>\n\t\t\t</div>\n\t\t\t<p className=\"text-white\">wordCount = {wordCounter}</p>\n\t\t\t<Written terms={termsArray} setStateOfLearn={setStateOfLearn} getStateOfLearn={getStateOfLearn} />\n\t\t</div>\n\t);\n}\n\nfunction Written(terms, setStateOfLearn, getStateOfLearn) {\n\tconst termsArray = terms.terms;\n\tconst [message, setMessage] = useState(\"\");\n\tlet answerIndex = Math.floor(Math.random() * termsArray.length);\n\n\tconst handleChange = (event) => {\n\t\tsetMessage(event.target.value);\n\t};\n\n\treturn (\n\t\t<div className=\"space-y-5 block p-6 max-w-sm bg-white rounded-lg border border-gray-200 shadow-md  dark:bg-gray-800 dark:border-gray-700 h-52\">\n\t\t\t<label className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\">{termsArray[answerIndex][1]}</label>\n\t\t\t<input\n\t\t\t\tonChange={handleChange}\n\t\t\t\tonKeyPress={(e) => {\n\t\t\t\t\tif (e.key === \"Enter\") {\n\t\t\t\t\t\tsetStateOfLearn(Math.random());\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tvalue={message}\n\t\t\t\ttype=\"text\"\n\t\t\t\tid=\"writtenInput\"\n\t\t\t\tclassName=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n\t\t\t\tplaceholder=\"\"\n\t\t\t></input>\n\t\t</div>\n\t);\n}\n"],"mappings":";;;;AAAA,OAAOA,cAAP,MAA2B,kBAA3B,C,CACA;;AACA,SAAQC,QAAR,QAAuB,OAAvB;;AAEA,IAAIC,QAAQ,GAAG,EAAf;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;EAAA;;EACpC,MAAMC,UAAU,GAAGD,KAAK,CAACA,KAAzB;EACA,MAAM,CAACE,WAAD,EAAcC,UAAd,IAA4BN,QAAQ,CAAC,CAAD,CAA1C;EACA,IAAIO,eAAe,GAAG,IAAtB;;EAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;IAClCH,UAAU,CAACG,KAAD,CAAV;EACA,CAFD;;EAGA,MAAMC,eAAe,GAAG,MAAM;IAC7B,OAAOL,WAAP;EACA,CAFD;;EAIA,oBACC;IAAK,SAAS,EAAC,uCAAf;IAAA,wBACC;MAAK,SAAS,EAAC,8DAAf;MAAA,uBACC;QAAK,SAAS,EAAC,qCAAf;QAAqD,KAAK,EAAE;UAACM,KAAK,EAAEV,QAAQ,GAAG;QAAnB;MAA5D;QAAA;QAAA;QAAA;MAAA;IADD;MAAA;MAAA;MAAA;IAAA,QADD,eAIC;MAAG,SAAS,EAAC,YAAb;MAAA,2BAAuCI,WAAvC;IAAA;MAAA;MAAA;MAAA;IAAA,QAJD,eAKC,QAAC,OAAD;MAAS,KAAK,EAAED,UAAhB;MAA4B,eAAe,EAAEI,eAA7C;MAA8D,eAAe,EAAEE;IAA/E;MAAA;MAAA;MAAA;IAAA,QALD;EAAA;IAAA;IAAA;IAAA;EAAA,QADD;AASA;;GArBuBR,K;;KAAAA,K;;AAuBxB,SAASU,OAAT,CAAiBT,KAAjB,EAAwBK,eAAxB,EAAyCE,eAAzC,EAA0D;EAAA;;EACzD,MAAMN,UAAU,GAAGD,KAAK,CAACA,KAAzB;EACA,MAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,EAAD,CAAtC;EACA,IAAIe,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBd,UAAU,CAACe,MAAtC,CAAlB;;EAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;IAC/BP,UAAU,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV;EACA,CAFD;;EAIA,oBACC;IAAK,SAAS,EAAC,+HAAf;IAAA,wBACC;MAAO,SAAS,EAAC,iEAAjB;MAAA,UAAoFnB,UAAU,CAACW,WAAD,CAAV,CAAwB,CAAxB;IAApF;MAAA;MAAA;MAAA;IAAA,QADD,eAEC;MACC,QAAQ,EAAEK,YADX;MAEC,UAAU,EAAGI,CAAD,IAAO;QAClB,IAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuB;UACtBjB,eAAe,CAACQ,IAAI,CAACE,MAAL,EAAD,CAAf;QACA;MACD,CANF;MAOC,KAAK,EAAEL,OAPR;MAQC,IAAI,EAAC,MARN;MASC,EAAE,EAAC,cATJ;MAUC,SAAS,EAAC,qQAVX;MAWC,WAAW,EAAC;IAXb;MAAA;MAAA;MAAA;IAAA,QAFD;EAAA;IAAA;IAAA;IAAA;EAAA,QADD;AAkBA;;IA3BQD,O;;MAAAA,O"},"metadata":{},"sourceType":"module"}