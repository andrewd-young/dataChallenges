{"ast":null,"code":"var _jsxFileName = \"/Users/andrew/Documents/litDecks/src/Learn.js\",\n    _s = $RefreshSig$();\n\nimport MultipleChoice from \"./MultipleChoice\";\nimport Written from \"./Written\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Learn(terms) {\n  _s();\n\n  let progress = 50;\n  const [wordsDone, setWords] = useState(0); //a function to choose either a multiple choice or written question with a random word from terms\n\n  const chooseQuestion = () => {\n    if (wordsDone < terms.length) {\n      const random = Math.floor(Math.random() * 2);\n\n      if (random === 0) {\n        return /*#__PURE__*/_jsxDEV(MultipleChoice, {\n          word: terms[wordsDone]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 16\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Written, {\n          word: terms[wordsDone]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 16\n        }, this);\n      }\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: \"You're done!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full bg-gray-200 rounded-full h-2.5 dark:bg-gray-700\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-blue-600 h-2.5 w-45 rounded-full\",\n        style: {\n          width: progress + '%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }, this), wordsDone % 10 !== 0 && generateQuestion(), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg dark:text-white\",\n      children: [\" \", JSON.stringify(terms), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Learn, \"V/7yGgNwtr7Yn/9nwZUJ2qD0FQ4=\");\n\n_c = Learn;\n\nvar _c;\n\n$RefreshReg$(_c, \"Learn\");","map":{"version":3,"names":["MultipleChoice","Written","useState","Learn","terms","progress","wordsDone","setWords","chooseQuestion","length","random","Math","floor","width","generateQuestion","JSON","stringify"],"sources":["/Users/andrew/Documents/litDecks/src/Learn.js"],"sourcesContent":["import MultipleChoice from \"./MultipleChoice\";\nimport Written from \"./Written\";\nimport {useState} from \"react\";\n\nexport default function Learn(terms) {\n  let progress = 50;\n  const [wordsDone, setWords] = useState(0);\n\n  //a function to choose either a multiple choice or written question with a random word from terms\n  const chooseQuestion = () => {\n    if (wordsDone < terms.length) {\n      const random = Math.floor(Math.random() * 2);\n      if (random === 0) {\n        return <MultipleChoice word={terms[wordsDone]} />;\n      } else {\n        return <Written word={terms[wordsDone]} />;\n      }\n    } else {\n      return <div className=\"text-center\">You're done!</div>;\n    }\n  }\n\n\treturn (\n\t\t<div className=\"space-y-5\">\n\t\t\t<div className=\"w-full bg-gray-200 rounded-full h-2.5 dark:bg-gray-700\">\n\t\t\t\t<div className=\"bg-blue-600 h-2.5 w-45 rounded-full\" style={{width: progress + '%'}}></div>\n\t\t\t</div>\n      {wordsDone % 10 !== 0 && generateQuestion()}\n\t\t\t<p className=\"text-lg dark:text-white\"> {JSON.stringify(terms)} </p>\n\t\t</div>\n\t);\n}"],"mappings":";;;AAAA,OAAOA,cAAP,MAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,QAAR,QAAuB,OAAvB;;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;EAAA;;EACnC,IAAIC,QAAQ,GAAG,EAAf;EACA,MAAM,CAACC,SAAD,EAAYC,QAAZ,IAAwBL,QAAQ,CAAC,CAAD,CAAtC,CAFmC,CAInC;;EACA,MAAMM,cAAc,GAAG,MAAM;IAC3B,IAAIF,SAAS,GAAGF,KAAK,CAACK,MAAtB,EAA8B;MAC5B,MAAMC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,KAAgB,CAA3B,CAAf;;MACA,IAAIA,MAAM,KAAK,CAAf,EAAkB;QAChB,oBAAO,QAAC,cAAD;UAAgB,IAAI,EAAEN,KAAK,CAACE,SAAD;QAA3B;UAAA;UAAA;UAAA;QAAA,QAAP;MACD,CAFD,MAEO;QACL,oBAAO,QAAC,OAAD;UAAS,IAAI,EAAEF,KAAK,CAACE,SAAD;QAApB;UAAA;UAAA;UAAA;QAAA,QAAP;MACD;IACF,CAPD,MAOO;MACL,oBAAO;QAAK,SAAS,EAAC,aAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAP;IACD;EACF,CAXD;;EAaD,oBACC;IAAK,SAAS,EAAC,WAAf;IAAA,wBACC;MAAK,SAAS,EAAC,wDAAf;MAAA,uBACC;QAAK,SAAS,EAAC,qCAAf;QAAqD,KAAK,EAAE;UAACO,KAAK,EAAER,QAAQ,GAAG;QAAnB;MAA5D;QAAA;QAAA;QAAA;MAAA;IADD;MAAA;MAAA;MAAA;IAAA,QADD,EAIKC,SAAS,GAAG,EAAZ,KAAmB,CAAnB,IAAwBQ,gBAAgB,EAJ7C,eAKC;MAAG,SAAS,EAAC,yBAAb;MAAA,gBAAyCC,IAAI,CAACC,SAAL,CAAeZ,KAAf,CAAzC;IAAA;MAAA;MAAA;MAAA;IAAA,QALD;EAAA;IAAA;IAAA;IAAA;EAAA,QADD;AASA;;GA3BuBD,K;;KAAAA,K"},"metadata":{},"sourceType":"module"}