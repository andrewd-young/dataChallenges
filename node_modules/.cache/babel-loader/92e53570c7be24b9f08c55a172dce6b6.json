{"ast":null,"code":"var _jsxFileName = \"/Users/andrew/Documents/litDecks/src/Learn.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport MultipleChoice from \"./MultipleChoice\"; // import Written from \"./Written\";\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet progress = 50;\nexport default function Learn(terms) {\n  _s();\n\n  let termsArray = terms.terms;\n  let [wordCounter, setCounter] = useState(0);\n  let questionSeed = Math.random();\n\n  let setLearnCounter = () => {\n    setCounter(wordCounter + 1);\n    questionSeed = Math.random();\n    questionElement = Math.floor(Math.random() * 2) === 0 ? /*#__PURE__*/_jsxDEV(Written, {\n      terms: termsArray,\n      questionSeed: questionSeed,\n      setLearnCounter: setLearnCounter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 61\n    }, this) : /*#__PURE__*/_jsxDEV(MultipleChoice, {\n      terms: termsArray,\n      questionSeed: questionSeed,\n      setLearnCounter: setLearnCounter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 156\n    }, this);\n  };\n\n  let questionElement = Math.floor(Math.random() * 2) === 0 ? /*#__PURE__*/_jsxDEV(Written, {\n    terms: termsArray,\n    questionSeed: questionSeed,\n    setLearnCounter: setLearnCounter\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 62\n  }, this) : /*#__PURE__*/_jsxDEV(MultipleChoice, {\n    terms: termsArray,\n    questionSeed: questionSeed,\n    setLearnCounter: setLearnCounter\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 157\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-5 mx-auto my-auto w-3/4 h-3/4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-12 w-full bg-gray-200 rounded-full h-2.5 dark:bg-gray-700\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-blue-600 h-2.5 w-45 rounded-full\",\n        style: {\n          width: progress + \"%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-white\",\n      children: [\"wordCount = \", wordCounter]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }, this), wordCounter != 10 && questionElement]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Learn, \"QcHsxLM9fYpPBkN5jLJF6F9OA4E=\");\n\n_c = Learn;\n\nfunction Written(props) {\n  _s2();\n\n  const termsArray = props.terms; //add third element 0 to every array in termsArray\n  // termsArray = termsArray.map((term) => term.push(0));\n\n  const [message, setMessage] = useState(\"\");\n  let answerIndex = Math.floor(props.questionSeed * termsArray.length);\n\n  const handleChange = event => {\n    setMessage(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-5 block p-6 max-w-sm bg-white rounded-lg border border-gray-200 shadow-md  dark:bg-gray-800 dark:border-gray-700 h-52\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\",\n      children: termsArray[answerIndex][1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: handleChange,\n      onKeyPress: e => {\n        if (e.key === \"Enter\") {\n          props.setLearnCounter();\n        }\n      },\n      value: message,\n      type: \"text\",\n      id: \"writtenInput\",\n      className: \"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\",\n      placeholder: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 3\n  }, this);\n}\n\n_s2(Written, \"EiOGSxO4GWQlH0sM782nQ9JwuAs=\");\n\n_c2 = Written;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Learn\");\n$RefreshReg$(_c2, \"Written\");","map":{"version":3,"names":["MultipleChoice","useState","progress","Learn","terms","termsArray","wordCounter","setCounter","questionSeed","Math","random","setLearnCounter","questionElement","floor","width","Written","props","message","setMessage","answerIndex","length","handleChange","event","target","value","e","key"],"sources":["/Users/andrew/Documents/litDecks/src/Learn.js"],"sourcesContent":["import MultipleChoice from \"./MultipleChoice\";\n// import Written from \"./Written\";\nimport {useState} from \"react\";\n\nlet progress = 50;\n\nexport default function Learn(terms) {\n\tlet termsArray = terms.terms;\n\tlet [wordCounter, setCounter] = useState(0);\n  let questionSeed = Math.random();\n\n  let setLearnCounter = () => {\n\t\tsetCounter(wordCounter + 1);\n\t\tquestionSeed = Math.random();\n    questionElement = Math.floor(Math.random() * 2) === 0 ? <Written terms={termsArray} questionSeed={questionSeed} setLearnCounter={setLearnCounter} /> : <MultipleChoice terms={termsArray} questionSeed={questionSeed} setLearnCounter={setLearnCounter} />;\n\t};\n\n\tlet questionElement = Math.floor(Math.random() * 2) === 0 ? <Written terms={termsArray} questionSeed={questionSeed} setLearnCounter={setLearnCounter} /> : <MultipleChoice terms={termsArray} questionSeed={questionSeed} setLearnCounter={setLearnCounter} />;\n\n\treturn (\n\t\t<div className=\"space-y-5 mx-auto my-auto w-3/4 h-3/4\">\n\t\t\t<div className=\"mt-12 w-full bg-gray-200 rounded-full h-2.5 dark:bg-gray-700\">\n\t\t\t\t<div className=\"bg-blue-600 h-2.5 w-45 rounded-full\" style={{width: progress + \"%\"}}></div>\n\t\t\t</div>\n\t\t\t<p className=\"text-white\">wordCount = {wordCounter}</p>\n\t\t\t{wordCounter != 10 && questionElement}\n\t\t</div>\n\t);\n}\n\nfunction Written(props) {\n\tconst termsArray = props.terms;\n\t//add third element 0 to every array in termsArray\n\t// termsArray = termsArray.map((term) => term.push(0));\n\tconst [message, setMessage] = useState(\"\");\n\tlet answerIndex = Math.floor(props.questionSeed * termsArray.length);\n\n\tconst handleChange = (event) => {\n\t\tsetMessage(event.target.value);\n\t};\n\n\treturn (\n\t\t<div className=\"space-y-5 block p-6 max-w-sm bg-white rounded-lg border border-gray-200 shadow-md  dark:bg-gray-800 dark:border-gray-700 h-52\">\n\t\t\t<label className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\">{termsArray[answerIndex][1]}</label>\n\t\t\t<input\n\t\t\t\tonChange={handleChange}\n\t\t\t\tonKeyPress={(e) => {\n\t\t\t\t\tif (e.key === \"Enter\") {\n\t\t\t\t\t\tprops.setLearnCounter();\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tvalue={message}\n\t\t\t\ttype=\"text\"\n\t\t\t\tid=\"writtenInput\"\n\t\t\t\tclassName=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n\t\t\t\tplaceholder=\"\"\n\t\t\t></input>\n\t\t</div>\n\t);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}